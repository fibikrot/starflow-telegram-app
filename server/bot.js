const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();

class StarFlowBot {
    constructor() {
        this.token = process.env.TELEGRAM_BOT_TOKEN || '7637068885:AAHUnq0htwtwnLGCW00YBjUKIq6RxX9lVvM';
        this.webAppUrl = process.env.WEB_APP_URL || 'https://starflow-telegram-app.vercel.app';
        this.bot = null;
        this.isRunning = false;
    }

    init() {
        try {
            this.bot = new TelegramBot(this.token, { polling: true });
            this.setupHandlers();
            this.isRunning = true;
            console.log('ü§ñ StarFlow –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
            console.log('üåê Web App URL:', this.webAppUrl);
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞:', error);
        }
    }

    setupHandlers() {
        // –ö–æ–º–∞–Ω–¥–∞ /start
        this.bot.onText(/\/start/, (msg) => {
            const chatId = msg.chat.id;
            const firstName = msg.from.first_name || '–î—Ä—É–≥';
            
            const welcomeMessage = `üåü –ü—Ä–∏–≤–µ—Ç, ${firstName}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ StarFlow!

üéÆ **–ß—Ç–æ —Ç–µ–±—è –∂–¥–µ—Ç:**
‚≠ê –ö–ª–∏–∫–∞–π –ø–æ –∑–≤–µ–∑–¥–∞–º –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –æ—á–∫–∏
üèÜ –ü–æ–ª—É—á–∞–π –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –Ω–∞–≥—Ä–∞–¥—ã  
üéµ –ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∑–≤—É–∫–æ–≤—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
üí´ –°–æ—Ä–µ–≤–Ω—É–π—Å—è —Å –¥—Ä—É–∑—å—è–º–∏

üöÄ **–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å?** –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!`;

            const keyboard = {
                inline_keyboard: [
                    [
                        {
                            text: 'üéÆ –ò–≥—Ä–∞—Ç—å –≤ StarFlow',
                            web_app: { url: this.webAppUrl }
                        }
                    ],
                    [
                        {
                            text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                            callback_data: 'stats'
                        },
                        {
                            text: '‚ùì –ü–æ–º–æ—â—å',
                            callback_data: 'help'
                        }
                    ]
                ]
            };

            this.bot.sendMessage(chatId, welcomeMessage, {
                reply_markup: keyboard,
                parse_mode: 'Markdown'
            });
        });

        // –ö–æ–º–∞–Ω–¥–∞ /play
        this.bot.onText(/\/play/, (msg) => {
            const chatId = msg.chat.id;
            
            const playMessage = `üéÆ **–í—Ä–µ–º—è –∏–≥—Ä–∞—Ç—å!**

üåü –ö–ª–∏–∫–∞–π –ø–æ –∑–≤–µ–∑–¥–∞–º –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –æ—á–∫–∏!
üèÜ –û—Ç–∫—Ä—ã–≤–∞–π –Ω–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è!
üéµ –í–∫–ª—é—á–∏ –∑–≤—É–∫ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ–ø—ã—Ç–∞!

üöÄ –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:`;

            const keyboard = {
                inline_keyboard: [
                    [
                        {
                            text: 'üåü –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É',
                            web_app: { url: this.webAppUrl }
                        }
                    ]
                ]
            };

            this.bot.sendMessage(chatId, playMessage, {
                reply_markup: keyboard,
                parse_mode: 'Markdown'
            });
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫
        this.bot.on('callback_query', (callbackQuery) => {
            const message = callbackQuery.message;
            const data = callbackQuery.data;
            const chatId = message.chat.id;

            switch (data) {
                case 'stats':
                    this.sendStats(chatId);
                    break;
                case 'help':
                    this.sendHelp(chatId);
                    break;
                case 'play_game':
                    this.sendPlayMessage(chatId);
                    break;
            }

            // –£–±–∏—Ä–∞–µ–º "—á–∞—Å–∏–∫–∏" —Å –∫–Ω–æ–ø–∫–∏
            this.bot.answerCallbackQuery(callbackQuery.id);
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App
        this.bot.on('web_app_data', (msg) => {
            const chatId = msg.chat.id;
            const data = JSON.parse(msg.web_app_data.data);
            
            console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ Web App:', data);
            
            if (data.action === 'click') {
                const responseMessage = `üåü –û—Ç–ª–∏—á–Ω–æ! –¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª ${data.stars} –∑–≤–µ–∑–¥!
üéØ –í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤: ${data.totalClicks}

–ü—Ä–æ–¥–æ–ª–∂–∞–π –∏–≥—Ä–∞—Ç—å –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –µ—â–µ –±–æ–ª—å—à–µ! üöÄ`;

                this.bot.sendMessage(chatId, responseMessage);
            }
        });

        // –ö–æ–º–∞–Ω–¥–∞ /help
        this.bot.onText(/\/help/, (msg) => {
            const chatId = msg.chat.id;
            this.sendHelp(chatId);
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        this.bot.on('error', (error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
        });

        this.bot.on('polling_error', (error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ polling:', error);
        });
    }

    sendStats(chatId) {
        const statsMessage = `üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ StarFlow**

üéÆ **–ò–≥—Ä–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚≠ê –ó–≤–µ–∑–¥—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∫–ª–∏–∫–∞–º–∏
üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
üéµ –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–µ–ª–∞—é—Ç –∏–≥—Ä—É –≤–µ—Å–µ–ª–µ–µ

üöÄ **–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:**
1. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–ò–≥—Ä–∞—Ç—å"
2. –ö–ª–∏–∫–∞–π –ø–æ –∑–≤–µ–∑–¥–µ ‚≠ê
3. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –æ—á–∫–∏ –∏ –æ—Ç–∫—Ä—ã–≤–∞–π –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è!

üí° **–°–æ–≤–µ—Ç:** –í–∫–ª—é—á–∏ –∑–≤—É–∫ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ–ø—ã—Ç–∞!`;

        const keyboard = {
            inline_keyboard: [
                [
                    {
                        text: 'üéÆ –ò–≥—Ä–∞—Ç—å —Å–µ–π—á–∞—Å',
                        web_app: { url: this.webAppUrl }
                    }
                ]
            ]
        };

        this.bot.sendMessage(chatId, statsMessage, {
            reply_markup: keyboard,
            parse_mode: 'Markdown'
        });
    }

    sendHelp(chatId) {
        const helpMessage = `‚ùì **–ü–æ–º–æ—â—å –ø–æ StarFlow**

üéÆ **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
/play - –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üåü **–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:**
1. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–ò–≥—Ä–∞—Ç—å –≤ StarFlow"
2. –ö–ª–∏–∫–∞–π –ø–æ –±–æ–ª—å—à–æ–π –∑–≤–µ–∑–¥–µ ‚≠ê
3. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –æ—á–∫–∏ –∑–∞ –∫–∞–∂–¥—ã–π –∫–ª–∏–∫
4. –û—Ç–∫—Ä—ã–≤–∞–π –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:
   ‚Ä¢ üåü –ü–µ—Ä–≤–∞—è –∑–≤–µ–∑–¥–∞ (1 –∫–ª–∏–∫)
   ‚Ä¢ üí´ –ó–≤–µ–∑–¥–æ–ø–∞–¥ (100 –∑–≤–µ–∑–¥)
   ‚Ä¢ üöÄ –ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–ª–∏–∫ (1000 –∫–ª–∏–∫–æ–≤)

üéµ **–ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã:**
‚Ä¢ –í–∫–ª—é—á–∏ –∑–≤—É–∫ –∫–Ω–æ–ø–∫–æ–π üîä
‚Ä¢ –ö–∞–∂–¥—ã–π –∫–ª–∏–∫ –∏–∑–¥–∞–µ—Ç –∑–≤—É–∫
‚Ä¢ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—Ç—Å—è –º–µ–ª–æ–¥–∏–µ–π
‚Ä¢ –ö–∞–∂–¥—ã–µ 50 –∑–≤–µ–∑–¥ - –æ—Å–æ–±—ã–π –∑–≤—É–∫!

üíæ **–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!**

üöÄ –ì–æ—Ç–æ–≤ –∏–≥—Ä–∞—Ç—å? –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!`;

        const keyboard = {
            inline_keyboard: [
                [
                    {
                        text: 'üåü –ù–∞—á–∞—Ç—å –∏–≥—Ä—É',
                        web_app: { url: this.webAppUrl }
                    }
                ]
            ]
        };

        this.bot.sendMessage(chatId, helpMessage, {
            reply_markup: keyboard,
            parse_mode: 'Markdown'
        });
    }

    sendPlayMessage(chatId) {
        const playMessage = `üéÆ **–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã StarFlow!**

üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∑–≤–µ–∑–¥–Ω—ã—Ö –∫–ª–∏–∫–æ–≤!

üéØ **–¢–≤–æ—è —Ü–µ–ª—å:**
‚Ä¢ –ö–ª–∏–∫–∞–π –ø–æ –∑–≤–µ–∑–¥–µ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –æ—á–∫–∏
‚Ä¢ –û—Ç–∫—Ä—ã–≤–∞–π –Ω–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
‚Ä¢ –ë–µ–π —Ä–µ–∫–æ—Ä–¥—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–ª–∏–∫–æ–≤!

üéµ –ù–µ –∑–∞–±—É–¥—å –≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ–≥—Ä—É–∂–µ–Ω–∏—è!

üöÄ –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:`;

        const keyboard = {
            inline_keyboard: [
                [
                    {
                        text: '‚≠ê –ò–≥—Ä–∞—Ç—å –≤ StarFlow',
                        web_app: { url: this.webAppUrl }
                    }
                ]
            ]
        };

        this.bot.sendMessage(chatId, playMessage, {
            reply_markup: keyboard,
            parse_mode: 'Markdown'
        });
    }

    stop() {
        if (this.bot && this.isRunning) {
            this.bot.stopPolling();
            this.isRunning = false;
            console.log('ü§ñ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
    }
}

module.exports = StarFlowBot; 